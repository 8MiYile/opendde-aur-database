build() {
    mkdir {build,install}
    
    if ! command -v ccache &> /dev/null
    then
        cmake -B build -S "${srcdir}/obfuscator/llvm-project/llvm" \
            -DCMAKE_BUILD_TYPE=MinSizeRel \
            -DLLVM_ENABLE_PROJECTS="clang;lld" \
            -DLLVM_ENABLE_LLD=ON \
            -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
            -DLLVM_TARGETS_TO_BUILD="ARM;AArch64;X86"
    else
        cmake -B build -S "${srcdir}/obfuscator/llvm-project/llvm" \
            -DCMAKE_BUILD_TYPE=MinSizeRel \
            -DLLVM_ENABLE_PROJECTS="clang;lld" \
            -DLLVM_ENABLE_LLD=ON \
            -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
            -DLLVM_TARGETS_TO_BUILD="ARM;AArch64;X86" \
            -DLLVM_CCACHE_BUILD=ON
    fi
    
    cmake --build build --parallel
    cmake --install build --prefix install
    
    cd install/bin
    ln -s ld.lld ld
    rm -f analyze-build bugpoint c-index-test clang-check clang-cl clang-extdef-mapping clang-format clang-linker-wrapper clang-offload-*
    rm -f clang-rename clang-repl clang-scan-deps clang-nvlink-wrapper clang-refactor diagtool dsymutil git-clang-format hmaptool
    rm -f scan-view split-file verify-uselistorder intercept-build sancov sanstats scan-build scan-build-py
    cd -
    
    cd install/lib
    rm -f lib*\.a lib*\.so*
    rm -rf cmake
    rm -rf libear
    rm -rf libscanbuild
    cd -
}
