  # Fix xinetd files. Our xinetd file is fixed in package()
  sed -e "/^\s*user\s\+=/ s:amandabackup:${_amandauser}:g" \
      -e "/^\s*group\s\+=/ s:disk:${_amandagroup}:g" \
    -i 'example/xinetd.'*

  # Various fixes
  #cp -p 'example/template.d/advanced.conf.in' 'example/template.d/advanced.conf.in.Arch'
  sed -e 's:@CONFIG_DIR/:@CONFIG_DIR@/:g' \
      -e 's:DailySet1:@DEFAULT_CONFIG@:g' \
      -e '/^netusage/ s:8000 :80000 :g' \
    -i 'example/template.d/advanced.conf.in'

  set +u
}
    # Amanda's handling of /etc is so broken that we must specify it 3 times and fix it in package()
    MT='/usr/bin/mt-st' \
    CFLAGS="${CFLAGS} -g -rdynamic -fcommon" \
    CXXFLAGS="${CXXFLAGS} -g -rdynamic -fcommon" \
    ./configure "${_opts[@]}" \
      --prefix='/usr' \
      --sbindir='/usr/bin' \
      --libexecdir="${_amlibexec}" \
      --sysconfdir='/etc' \
      --localstatedir='/var' \
      --with-configdir="${_ametc}" \
      --with-security-file="${_amsecurity}" \
      --with-gnutar-listdir="${_amhome}/gnutar-lists" \
      --mandir='/usr/share/man' \
      --with-user="${_amandauser}" \
      --with-group="${_amandagroup}" \
      --with-ipv6 \
      --with-ssh-security \
      --with-amandates="${_amhome}/amandates" \
      --with-tmpdir="/tmp/amandabackup-$$"
    ! grep -F $'/usr/var\n/usr/etc' 'config.log' || echo "{}"
  fi

  local _nproc="$(nproc)"; _nproc=$((_nproc>8?8:_nproc))
  nice make -j "${_nproc}" # not using -s helps
  set +u
}
package() {
  set -u
  #_testAmandaUserGroup
  cd "${_srcdir}"
  _install_check

  # Obnoxious installer expects fakeroot. We'll capture chown & chmod commands to place them in .install
  # A beneficial side affect is that improper permissions and owership will be fixed on every install/upgrade.
  local _aminstall="${pkgdir}${_amlibexec}/amanda/amanda-install.sh"
  install -Dpm755 <(cat << EOF
#!/bin/bash

echo "  chown\$(printf ' "%s"' "\${@}")" >> '${_aminstall}'
EOF
  ) "${pkgdir}/chown"

  # Capture suid chmod, passthru normal chmod
  install -Dpm755 <(cat << EOF
#!/bin/bash

if [ "\$1" = '644' ] || [ "\$1" = '755' ]; then
  # Pass through standard chmod
  /usr/bin/chmod "\${@}"
else
  echo "  chmod\$(printf ' "%s"' "\${@}")" >> '${_aminstall}'
fi
EOF
  ) "${pkgdir}/chmod"

  # Capture commands go into this script
  install -Dpm744 <(cat << EOF
#!/bin/sh
# Created by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

# This is run by the package installer which can't be modified
# to have all the current settings

set -e
set -u

# commands captured from Makefile

_fn_chown_makefile() {
EOF
  ) "${_aminstall}"

  # Install the compiled output using the PATH to capture chown/chmod commands
  PATH="${pkgdir}:${PATH}" \
  make -j1 DESTDIR="${pkgdir}" install # not using -s helps

  # This file is put in the wrong place
  if [ ! -s "${pkgdir}${_amsecurity}" ]; then
    mv "${pkgdir}/etc/amanda/${_amsecurity##*/}" "${pkgdir}${_amsecurity}"
  fi

  # Clean up capture and scripts
  rm "${pkgdir}/chown" "${pkgdir}/chmod"
  sed -e '# Trim pkgdir for .install' \
      -e "s:${pkgdir}::g" \
      -e '# Convert amanda group to var' \
      -e 's/"root:'"${_amandagroup}"'"/"root:${_amandagroup}"/g' \
    -i "${_aminstall}"
  echo -e '}\n\n# Commands from PKGBUILD\n# must run before makefile above\n\n_fn_chown_PKGBUILD() {' >> "${_aminstall}"

  # Create amanda log dir, not much used
  install -dm0770 "${pkgdir}${_amlog}/"
  echo '  chmod 770 "${_amlog}"' >> "${_aminstall}"
  echo '  chown "root:${_amandagroup}" "${_amlog}"' >> "${_aminstall}"

  # Create amanda home dir
  install -dm0700 "${pkgdir}${_amhome}/"
  echo '  chmod 700 "${_amhome}"' >> "${_aminstall}"
  install -dm0700 "${pkgdir}${_amhome}/.ssh/"
  echo '  chmod 700 "${_amhome}/.ssh/"' >> "${_aminstall}"
  echo '  find "${_amhome}/.ssh" -type "f" -exec chmod 600 "{}" "+"' >> "${_aminstall}"

  # Set permission on config folders
  install -dm0755 "${pkgdir}${_ametc}"
  install -dm0750 "${pkgdir}${_ametc}/MyConfig"
  if [ "${_ametc}" = '/etc' ] || [ "${_ametc}" = '/etc/' ]; then
    echo 'The folder specified for ${_ametc} will destroy the system! Cant build package!'
    set +u
    false
  else
    echo '  find "${_ametc}" -mindepth 1 -maxdepth 1 -type "d" -exec chown -R "${_amandauser}:${_amandagroup}" "{}" ";" -exec chmod 750 "{}" ";"' >> "${_aminstall}"
  fi
  echo '  chown "root:${_amandagroup}" "${_ametc}"' >> "${_aminstall}"
  echo '  chown "root:root" "${_amsecurity}"' >> "${_aminstall}"
  echo '  chmod 644 "${_amsecurity}"' >> "${_aminstall}"
  ln -s '/usr/share/amanda/example/' "${pkgdir}${_ametc}/example"
  ln -s '/usr/share/amanda/example/' "${pkgdir}${_amhome}/example"
  ln -s '/usr/share/amanda/template.d/' "${pkgdir}${_ametc}/template.d"
  ln -s '/usr/share/amanda/template.d/' "${pkgdir}${_amhome}/template.d"

  # If amanda-security.conf is placed in /etc/amanda then we must use
  # a more restrictive permissions setup and a helper script to create
  # the folder. amserverconfig doesn't work. A better way was found so
  # this isn't used any more. It documents how it could be done.
  local _helpertext=''
  if [ "${_amsecurity#/etc/amanda/}" != "${_amsecurity}" ]; then
    echo '  chmod 755 "${_ametc}"' >> "${_aminstall}"
    _helpertext=" with ${_ametc}/mkconfig.sh"
    install -Dm755 <(cat << EOF
#!/bin/bash
# Created by ${pkgname}-${pkgver} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

# This file is necessary because there are no permissions that will allow
# Amanda to backup and also allow Amanda to create folders here.

set -e
set -u

if [ "\$#" -eq 0 ] || [ "\${EUID}" -ne 0 ]; then
  echo "Example: sudo ./mkconfig.sh MyConfig"
  echo "This will create or fix the specified config folder with correct permissions"
  echo "for the Amanda user"
else
  while [ "\$#" -ne 0 ]; do
    mkdir "${_ametc}/\$1" || :
    chmod 750 "${_ametc}/\$1"
    chown -R "${_amandauser}:${_amandagroup}" "${_ametc}/\$1"
    shift
  done
fi
EOF
    ) "${pkgdir}${_ametc}/mkconfig.sh"
  else
    echo '  chmod 775 "${_ametc}"' >> "${_aminstall}"
    chmod 775 "${pkgdir}${_ametc}"
    _helpertext=" with amserverconfig"
  fi

  # Install xinetd configuration
  if [ ! -z "${_opt_bsd}" ]; then
    install -Dpm0644 "${srcdir}/xinetd.amanda.${_opt_bsd}" "${pkgdir}/etc/xinetd.d/${pkgname}"
    pushd "${srcdir}" >> /dev/null
    local _xinetd
    for _xinetd in "xinetd.${pkgname}".*; do
      install -Dpm0644 "${_xinetd}" "${pkgdir}/etc/xinetd.d/${_xinetd#xinetd\.}"
    done
    popd > /dev/null
    sed -e "/^\s*user\s\+=/ s:amanda:${_amandauser}:g" \
        -e "/^\s*group\s\+=/ s:storage:${_amandagroup}:g" \
        -e "/^\s*server\s\+=/ s:/usr/libexec:${_amlibexec}:g" \
      -i "${pkgdir}/etc/xinetd.d/${pkgname}"*
  fi
  # Can't put ${pkgver} on this one
  install -Dm0600 <(cat << EOT
# Created by ${pkgname} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

# http://wiki.zmanda.com/index.php/How_To:Configure_bsdtcp_authentication

# This is where amanda works out what remote connections to allow in the format
# of <host> <username> <command>
#
# server1.example.com   amanda  amdump
EOT
  ) "${pkgdir}/${_amhome}/.amandahosts"
  echo '  chmod 600 "${_amhome}/.amandahosts"' >> "${_aminstall}"

  # create some of the runtime files amanda requires so they are created with
  # the correct ownership and permissions.
  install -Dm0664 /dev/null "${pkgdir}${_amhome}/amandates" # https://wiki.zmanda.com/index.php/Amanda:What_is_the_%27amandates%27_file_for%3F
  #install -Dm0664 /dev/null "${pkgdir}${_amhome}/dumpdates"
  install -dm755 "${pkgdir}${_amhome}/gnutar-lists"
  echo '  chown -R "${_amandauser}:${_amandagroup}" "${_amhome}"' >> "${_aminstall}"

  # Prevent non amanda users from running these and causing unexpected errors.
  # These chmod must be run after the ones from makefile so they take precedence
  set +u; msg 'Fixing executable permissions'; set -u
  local _amps
  pushd "${pkgdir}/usr/bin" > /dev/null
  readarray -t _amps <<<"$(find -mindepth 1 -maxdepth 1 -type 'f' -perm /111)"
  chmod 754 "${_amps[@]}"
  popd > /dev/null
  local _amprogs="${_amps[*]#\./}"
  echo "${_amprogs}"
  _amprogs="${_amprogs// /,}"
  echo '  chown "root:${_amandagroup}" "/usr/bin"'"/{${_amprogs}}" >> "${_aminstall}"
  echo '  chmod 754 "/usr/bin"'"/{${_amprogs}}" >> "${_aminstall}"

  # Set up Wiki local demo to check with sudo -u 'amandabackup' amcheck 'MyConfig'
  install -dm0750 "${pkgdir}${_amdump}"
  install -dm0755 "${pkgdir}${_amhome}/holdings/MyConfig"
  install -dm0755 "${pkgdir}${_amhome}/vtapes/MyConfig"/slot{1,2,3,4}
  install -dm0755 "${pkgdir}${_ametc}/MyConfig"/{curinfo,index}
  echo '  chown -R "${_amandauser}:${_amandagroup}" "${_amdump}"' >> "${_aminstall}"
  # Using pkgver in files that are backed up would trigger .pacnew constantly
  install -Dm0640 <(cat << EOF
# Created by ${pkgname} PKGBUILD from Arch Linux AUR
# https://aur.archlinux.org/

# You can extend this to be your backup.
# It would be better to create another backup${_helpertext}
# and let this stay a demo.

# Local backup demo
# http://wiki.zmanda.com/index.php/GSWA/Build_a_Basic_Configuration

# The Wiki has old folder names. The folders here match what the amanda programs use.

# Examples: /usr/share/amanda/template.d/

org "MyConfig"
infofile "${_ametc}/MyConfig/curinfo"
logdir "${_ametc}/MyConfig"
indexdir "${_ametc}/MyConfig/index"
dumpuser "${_amandauser}"

tpchanger "chg-disk:${_amhome}/vtapes/MyConfig"
labelstr "MyData[0-9][0-9]"
autolabel "MyData%%" EMPTY VOLUME_ERROR
tapecycle 4
dumpcycle 3 days
amrecover_changer "changer"

tapetype "TEST-TAPE"
define tapetype TEST-TAPE {
  length 100 mbytes
  filemark 4 kbytes
}
