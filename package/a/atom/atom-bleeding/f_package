package() {
  ## apm
  cp -r "${srcdir}"/apm-build/usr "${pkgdir}"
  rm $pkgdir/usr/bin/apm
  cd $pkgdir/usr/bin/
  ln -sf ../lib/node_modules/atom-package-manager/bin/apm apm-bleeding

  cd "${pkgdir}"${_apmdir}

  install -dm755 ${pkgdir}/usr/share/doc/${pkgname}/apm/
  install -dm755 ${pkgdir}/usr/share/doc/${pkgname}/atom/
  install -Dm644 "${srcdir}"/apm/README.md ${pkgdir}/usr/share/doc/${pkgname}/apm/README.md
  install -Dm644 "${srcdir}"/atom-${_atomver}/README.md ${pkgdir}/usr/share/doc/${pkgname}/atom/README.md
  install -Dm644 "${srcdir}/atom-${_atomver}/package.json" "${pkgdir}/usr/share/doc/${pkgname}/atom/package.json"

  # Install license file
  install -d -m755 "${pkgdir}/usr/share/licenses/${pkgname}/{apm,atom}"
  ln -s ../../../lib/node_modules/atom-package-manager/LICENSE.md \
     "${pkgdir}/usr/share/licenses/${pkgname}/apm"

  # Remove occurrences of ${srcdir}
  find "${pkgdir}" -name "package.json" \
       -exec sed -e "s|${srcdir}/apm-build||" \
                 -e "s|${srcdir}/apm|${_apmdir}|" \
                 -i '{}' \;

  # Remove useless stuff
  find "${pkgdir}"/usr/lib \
      -name ".*" -prune -exec rm -r '{}' \; \
      -or -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.mk" -exec rm '{}' \; \
      -or -path "*/git-utils/binding.gyp" -exec rm '{}' \; \
      -or -path "*/git-utils/src" -prune -exec rm -r '{}' \; \
      -or -path "*/keytar/binding.gyp" -exec rm '{}' \; \
      -or -path "*/keytar/src" -prune -exec rm -r '{}' \; \
      -or -path "*/oniguruma/binding.gyp" -exec rm '{}' \; \
      -or -path "*/oniguruma/src" -prune -exec rm -r '{}' \; \
      -or -name "*.yml" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "binding.Makefile" -exec rm '{}' \; \
      -or -name "config.gypi" -exec rm '{}' \; \
      -or -name "deps" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "Makefile" -exec rm '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "obj.target" -prune -exec rm -r '{}' \; \
      -or -name "samples" -prune -exec rm -r '{}' \; \
      -or -name "test" -prune -exec rm -r '{}' \; \
      -or -name "tests" -prune -exec rm -r '{}' \;
  cd "$pkgdir"
  patch -Np1 -i "$srcdir/upgrade.patch"

  ## atom
  cd "${srcdir}/${_pkgname}-${_atomver}"

  _LIB="/usr/lib/${pkgname}"
  _ALIBDIR="${pkgdir}/${_LIB}"

  install -dm755 "${pkgdir}/usr/lib"
  cp -r out/app ${_ALIBDIR}

  install -Dm644 "resources/app-icons/stable/png/1024.png" "${pkgdir}/usr/share/pixmaps/atom-bleeding.png"

  install -dm755 "${pkgdir}/usr/share/applications"
  install -Dm755 "$srcdir/${pkgname}.desktop" \
          "${pkgdir}/usr/share/applications/${pkgname}.desktop"

  install -Dm755 "$srcdir/atom.sh" "${pkgdir}/usr/bin/${pkgname}"

  install -dm755 "${pkgdir}/usr/share/licenses/${pkgname}/atom"
  node -e "require('./script/lib/get-license-text')().then((licenseText) => require('fs').writeFileSync('${pkgdir}/usr/share/licenses/${pkgname}/atom/LICENSE.md', licenseText))"

  # Remove useless stuff
  find "${_ALIBDIR}/node_modules" \
      -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -path "*/less/gradle" -prune -exec rm -r '{}' \; \
      -or -path "*/task-lists/src" -prune -exec rm -r '{}' \; \
      -or -name "package.json" -exec sed -i -e "s|$srcdir|${_LIB}|g" '{}' +

  rm -rf "${pkgdir}/usr/etc"
}
