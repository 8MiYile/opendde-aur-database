build() {
  ## apm
  cd apm

  coffee -c --no-header -o lib src/*.coffee
  npm install --user root -g --prefix="${srcdir}"/apm-build/usr

  cd "${srcdir}/apm-build${_apmdir}"

  # Use system npm
  npm uninstall npm

  npm dedupe

  ## atom
  cd "${srcdir}/${_pkgname}-${_atomver}"

  export ATOM_RESOURCE_PATH="$srcdir/${_pkgname}"
  # If unset, ~/.atom/.node-gyp/.atom/.npm is used
  export NPM_CONFIG_CACHE="${HOME}/.atom/.npm"

  # Make sure NodeGit builds from source and with the correct runtime
  export BUILD_ONLY=1
  export ELECTRON_VERSION=${_ELECTRON_VERSION}
  export APMBIN="$srcdir/apm-build/usr/lib/node_modules/atom-package-manager/bin/apm"

  $APMBIN clean
  # -Wl,-z,noexecstack to make sure nodegit.node does not have executable stack
  $APMBIN install

  # Use system ctags
  cd node_modules/symbols-view
  patch -Np1 -i "${srcdir}"/symbols-view-use-system-ctags.patch
  rm -r vendor
  cd ../..

  # Fix for Electron 1.3.0
  _node_gyp="node-gyp rebuild --target=${_ELECTRON_VERSION} --dist-url=https://atom.io/download/atom-shell"
  cd node_modules/oniguruma
  patch -Np1 -i "${srcdir}"/fix-oniguruma.patch
  ${_node_gyp}
  cd ../../

  cd script && npm install && ./build
}
